/*
  Style Order Convention -- alphabetically ordered within their corresponding scope:
    Properties (that define element behavior)
    Layout
    Sizing
    Spacing
    Everything Else
    Handlers
*/

/* == Constant ================================================================= */
/* NOTE: Must match theme variables. (SEE: core/theme) */
:root {
  --ACTIVE_BUTTON_COLOR: #E2E8F0;
  --HOVER_BUTTON_COLOR: #EDF2F7/*currently only used through CSS file*/;
}

/* == Editor =================================================================== */
.Editor { outline: 1px solid transparent; }
.inlineNodeContainer { position: relative; display: inline-block; }
.selected { outline: 2px solid black; }
.ProseMirror-selectednode { outline: 2px solid black; }

/* -- Highlight ---------------------------------------------------------------- */
.ProseMirror-focused .selected_text {
  /*only show background when editor is no longer focused*/
  background-color: transparent !important;
}
.selected_text {
  background-color: rgba(0,0,0,0.1);
}

/* -- Link --------------------------------------------------------------------- */
.link {
  color: #0000EE;
  text-decoration: underline;
  cursor: inherit;
}
.clickable { cursor: pointer; }

/* -- AsyncNode ---------------------------------------------------------------- */
[data-asyncnodestate]::after {
  content: '';
  display: inline-block;
  width: 0.75em;
  height: 0.75em;
  margin-left: 0.35em;
  border-radius: 7.5px;
  background-color: var(--status-color);
}

/* .. Chip ..................................................................... */
.chip {
  display: inline-block;
  height: 40px;
  padding: 0 15px;
  background-color: #4299E1;
  border-radius: 40px;
  color: white;
  line-height: 40px;
  font-size: 16px;
  cursor: grab;
}
.chip:hover { background-color: #2C5282; }

.chipCloseButton {
  margin-left: 15px;
  color: white;
  cursor: pointer;
  float: right;
  font-size: 20px;
  font-weight: bold;
}
.chipCloseButton:hover { color: red; }

/* -- VisualID ----------------------------------------------------------------- */
[data-visualid]::after {
  content: attr(data-visualid);
}

/* -- Gap Cursor --------------------------------------------------------------- */
.ProseMirror-gapcursor {
  display: none;
  position: absolute;
  pointer-events: none;
}

.ProseMirror-gapcursor:after {
  position: absolute;
  display: block;
  top: -2px;
  width: 20px;
  margin-top: 0.25em;
  animation: ProseMirror-cursor-blink 1.1s steps(2, start) infinite;
  border-top: 1px solid black;
  content: '';
}

@keyframes ProseMirror-cursor-blink {
  to { visibility: hidden; }
}

.ProseMirror-focused .ProseMirror-gapcursor { display: block; }

/* == Toolbar ================================================================== */
.iconButton {
  width: auto;
  height: auto;

  margin-right: 0.375rem;
  padding: 0.30em;

  border-radius: 50%;
}
.iconButton.active { background-color: var(--ACTIVE_BUTTON_COLOR); }
.iconButton:hover  { background-color: var(--HOVER_BUTTON_COLOR); }
